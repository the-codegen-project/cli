asyncapi: 3.0.0
info:
  title: E-commerce Messaging System
  version: 1.0.0
  description: Event-driven e-commerce system with comprehensive header management for authentication, tracing, routing, and metadata

channels:
  order-events:
    messages:
      OrderCreated:
        headers:
          allOf:
            - $ref: '#/components/schemas/CommonHeaders'
            - $ref: '#/components/schemas/AuthHeaders'
            - $ref: '#/components/schemas/ServiceHeaders'
            - type: object
              required: [x-user-id]
              properties:
                x-user-id:
                  type: string
                  format: uuid
                  description: ID of the user who created the order
        payload:
          $ref: '#/components/schemas/OrderCreatedPayload'

      OrderStatusChanged:
        headers:
          allOf:
            - $ref: '#/components/schemas/CommonHeaders'
            - $ref: '#/components/schemas/ActorHeaders'
            - type: object
              required: [x-event-type]
              properties:
                x-event-type:
                  $ref: '#/components/schemas/OrderEventType'
                x-previous-status:
                  $ref: '#/components/schemas/OrderStatus'
                x-reason-code:
                  $ref: '#/components/schemas/OrderReasonCode'
                x-priority:
                  $ref: '#/components/schemas/Priority'
        payload:
          $ref: '#/components/schemas/OrderStatusChangedPayload'

  payment-events:
    messages:
      PaymentProcessed:
        headers:
          allOf:
            - $ref: '#/components/schemas/CommonHeaders'
            - $ref: '#/components/schemas/PaymentHeaders'
            - $ref: '#/components/schemas/SecurityHeaders'
        payload:
          $ref: '#/components/schemas/PaymentProcessedPayload'

  inventory-events:
    messages:
      InventoryUpdated:
        headers:
          allOf:
            - $ref: '#/components/schemas/CommonHeaders'
            - $ref: '#/components/schemas/InventoryHeaders'
            - $ref: '#/components/schemas/AuditHeaders'
        payload:
          $ref: '#/components/schemas/InventoryUpdatedPayload'

  notification-events:
    messages:
      NotificationSent:
        headers:
          allOf:
            - $ref: '#/components/schemas/CommonHeaders'
            - $ref: '#/components/schemas/NotificationHeaders'
            - $ref: '#/components/schemas/LocalizationHeaders'
        payload:
          $ref: '#/components/schemas/NotificationSentPayload'

  analytics-events:
    messages:
      UserBehaviorTracked:
        headers:
          allOf:
            - $ref: '#/components/schemas/CommonHeaders'
            - $ref: '#/components/schemas/SessionHeaders'
            - $ref: '#/components/schemas/DeviceHeaders'
            - $ref: '#/components/schemas/PrivacyHeaders'
        payload:
          $ref: '#/components/schemas/UserBehaviorTrackedPayload'

  admin-events:
    messages:
      AdminActionPerformed:
        headers:
          allOf:
            - $ref: '#/components/schemas/CommonHeaders'
            - $ref: '#/components/schemas/AdminHeaders'
            - $ref: '#/components/schemas/SecurityHeaders'
            - $ref: '#/components/schemas/ComplianceHeaders'
        payload:
          $ref: '#/components/schemas/AdminActionPerformedPayload'

components:
  schemas:
    # Base header schemas
    CommonHeaders:
      type: object
      required: [x-correlation-id, x-tenant-id]
      properties:
        x-correlation-id:
          type: string
          format: uuid
          description: Unique correlation ID for request tracing
        x-tenant-id:
          type: string
          description: Multi-tenant identifier
        x-timestamp:
          type: string
          format: date-time
          description: Event creation timestamp

    AuthHeaders:
      type: object
      properties:
        authorization:
          type: string
          pattern: '^Bearer [A-Za-z0-9\-\._~\+\/]+=*$'
          description: JWT token for authentication

    ServiceHeaders:
      type: object
      properties:
        x-source-service:
          $ref: '#/components/schemas/SourceService'
        x-api-version:
          type: string
          pattern: '^v[0-9]+$'
          description: API version used
          default: v1
        x-request-id:
          type: string
          format: uuid
          description: Original request ID from the client

    ActorHeaders:
      type: object
      properties:
        x-actor-id:
          type: string
          format: uuid
          description: ID of user/system that triggered the change
        x-actor-type:
          $ref: '#/components/schemas/ActorType'

    PaymentHeaders:
      type: object
      required: [x-payment-provider]
      properties:
        x-payment-provider:
          $ref: '#/components/schemas/PaymentProvider'
        x-payment-method:
          $ref: '#/components/schemas/PaymentMethod'
        x-risk-score:
          type: number
          minimum: 0
          maximum: 100
          description: Fraud risk score (0-100)
        x-processor-transaction-id:
          type: string
          description: Transaction ID from payment processor
        x-retry-count:
          type: integer
          minimum: 0
          maximum: 5
          default: 0
          description: Number of retry attempts
        x-idempotency-key:
          type: string
          format: uuid
          description: Ensures payment processing idempotency

    SecurityHeaders:
      type: object
      properties:
        x-webhook-signature:
          type: string
          description: Webhook signature for verification
        x-ip-address:
          type: string
          format: ipv4
          description: IP address

    InventoryHeaders:
      type: object
      required: [x-warehouse-id]
      properties:
        x-warehouse-id:
          type: string
          description: Warehouse where inventory changed
        x-update-type:
          $ref: '#/components/schemas/InventoryUpdateType'
        x-batch-id:
          type: string
          format: uuid
          description: Batch ID for bulk operations
        x-location:
          type: string
          description: Specific location within warehouse

    AuditHeaders:
      type: object
      properties:
        x-operator-id:
          type: string
          format: uuid
          description: ID of person/system making the change
        x-audit-required:
          type: boolean
          default: false
          description: Whether this change requires audit

    NotificationHeaders:
      type: object
      required: [x-notification-type]
      properties:
        x-notification-type:
          $ref: '#/components/schemas/NotificationType'
        x-template-id:
          type: string
          description: Template used for notification
        x-channel-preference:
          $ref: '#/components/schemas/NotificationChannel'
        x-delivery-attempt:
          type: integer
          minimum: 1
          maximum: 3
          default: 1
          description: Delivery attempt number
        x-scheduled-time:
          type: string
          format: date-time
          description: When notification was scheduled to be sent
        x-provider:
          $ref: '#/components/schemas/NotificationProvider'

    LocalizationHeaders:
      type: object
      properties:
        x-language:
          type: string
          pattern: '^[a-z]{2}(-[A-Z]{2})?$'
          description: Language code (e.g., en-US, fr-FR)
          default: en-US

    SessionHeaders:
      type: object
      required: [x-session-id]
      properties:
        x-session-id:
          type: string
          format: uuid
          description: User session identifier

    DeviceHeaders:
      type: object
      properties:
        x-user-agent:
          type: string
          description: Browser/app user agent string
        x-device-type:
          $ref: '#/components/schemas/DeviceType'
        x-platform:
          $ref: '#/components/schemas/Platform'

    PrivacyHeaders:
      type: object
      properties:
        x-ab-test-groups:
          type: array
          items:
            type: string
          description: A/B test groups user belongs to
        x-feature-flags:
          type: array
          items:
            type: string
          description: Active feature flags for user
        x-gdpr-consent:
          type: boolean
          description: Whether user has given GDPR consent
        x-data-retention-days:
          type: integer
          minimum: 1
          maximum: 2555
          default: 365
          description: How long to retain this data

    AdminHeaders:
      type: object
      required: [x-admin-id, x-action-type]
      properties:
        x-admin-id:
          type: string
          format: uuid
          description: ID of admin performing action
        x-action-type:
          $ref: '#/components/schemas/AdminActionType'
        x-permission-level:
          $ref: '#/components/schemas/PermissionLevel'
        x-audit-level:
          $ref: '#/components/schemas/AuditLevel'
        x-approval-required:
          type: boolean
          default: false
          description: Whether action requires approval
        x-approved-by:
          type: string
          format: uuid
          description: ID of approving admin (if applicable)

    ComplianceHeaders:
      type: object
      properties:
        x-compliance-tags:
          type: array
          items:
            type: string
          description: Compliance/regulatory tags

    # Enum schemas
    SourceService:
      type: string
      enum: [web-app, mobile-app, admin-panel]
      description: Service that originated the event

    ActorType:
      type: string
      enum: [user, system, admin]
      description: Type of actor that triggered the change

    OrderEventType:
      type: string
      enum: [status-change, cancellation, refund]
      description: Type of status change event

    OrderStatus:
      type: string
      enum: [pending, confirmed, processing, shipped, delivered, cancelled]
      description: Order status values

    OrderReasonCode:
      type: string
      enum: [customer-request, payment-failed, inventory-unavailable, fraud-detected]
      description: Reason code for status change

    Priority:
      type: string
      enum: [low, normal, high, urgent]
      default: normal
      description: Processing priority

    PaymentProvider:
      type: string
      enum: [stripe, paypal, square, adyen]
      description: Payment processor used

    PaymentMethod:
      type: string
      enum: [credit-card, debit-card, bank-transfer, digital-wallet]
      description: Payment method used

    InventoryUpdateType:
      type: string
      enum: [restock, sale, adjustment, damage, return]
      description: Type of inventory update

    NotificationType:
      type: string
      enum: [email, sms, push, webhook]
      description: Type of notification sent

    NotificationChannel:
      type: string
      enum: [email, sms, push, none]
      description: User's preferred notification channel

    NotificationProvider:
      type: string
      enum: [sendgrid, twilio, firebase, custom]
      description: Notification service provider

    DeviceType:
      type: string
      enum: [desktop, mobile, tablet, tv, watch]
      description: Type of device used

    Platform:
      type: string
      enum: [web, ios, android, api]
      description: Platform/app used

    AdminActionType:
      type: string
      enum: [user-management, order-management, inventory-management, system-config]
      description: Category of admin action

    PermissionLevel:
      type: string
      enum: [read, write, admin, super-admin]
      description: Permission level required for action

    AuditLevel:
      type: string
      enum: [low, medium, high, critical]
      description: Audit importance level

    # Payload schemas
    OrderCreatedPayload:
      type: object
      properties:
        orderId:
          type: string
        customerId:
          type: string
        totalAmount:
          type: number

    OrderStatusChangedPayload:
      type: object
      properties:
        orderId:
          type: string
        newStatus:
          type: string
        timestamp:
          type: string

    PaymentProcessedPayload:
      type: object
      properties:
        paymentId:
          type: string
        orderId:
          type: string
        amount:
          type: number
        status:
          type: string

    InventoryUpdatedPayload:
      type: object
      properties:
        productId:
          type: string
        quantityChange:
          type: integer
        newQuantity:
          type: integer

    NotificationSentPayload:
      type: object
      properties:
        recipientId:
          type: string
        message:
          type: string
        status:
          type: string

    UserBehaviorTrackedPayload:
      type: object
      properties:
        userId:
          type: string
        action:
          type: string
        timestamp:
          type: string

    AdminActionPerformedPayload:
      type: object
      properties:
        action:
          type: string
        targetId:
          type: string
        details:
          type: object 