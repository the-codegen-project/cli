{
    "anyOf": [
        {
            "$ref": "#/definitions/AsyncAPICodegenConfiguration"
        }
    ],
    "definitions": {
        "AsyncAPICodegenConfiguration": {
            "type": "object",
            "properties": {
                "$schema": {
                    "type": "string",
                    "description": "For JSON and YAML configuration files this is used to force the IDE to enable auto completion and validation features"
                },
                "inputType": {
                    "type": "string",
                    "const": "asyncapi",
                    "description": "The type of document "
                },
                "inputPath": {
                    "type": "string",
                    "description": "The path to the input document "
                },
                "language": {
                    "type": "string",
                    "enum": [
                        "typescript"
                    ],
                    "description": "Set the global language for all generators, either one needs to be set"
                },
                "generators": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "default": "payloads-typescript"
                                    },
                                    "dependencies": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "default": []
                                    },
                                    "preset": {
                                        "type": "string",
                                        "const": "payloads",
                                        "default": "payloads"
                                    },
                                    "outputPath": {
                                        "type": "string",
                                        "default": "src/__gen__/payloads"
                                    },
                                    "serializationType": {
                                        "type": "string",
                                        "const": "json",
                                        "default": "json"
                                    },
                                    "language": {
                                        "type": "string",
                                        "const": "typescript",
                                        "default": "typescript"
                                    },
                                    "enum": {
                                        "type": "string",
                                        "enum": [
                                            "enum",
                                            "union"
                                        ],
                                        "default": "enum",
                                        "description": "By default all payloads enum types are generated as separate enum types, but in some cases a simple union type might be more prudent."
                                    },
                                    "map": {
                                        "type": "string",
                                        "enum": [
                                            "indexedObject",
                                            "map",
                                            "record"
                                        ],
                                        "default": "record",
                                        "description": "Which map type to use when a dictionary type is needed"
                                    },
                                    "useForJavaScript": {
                                        "type": "boolean",
                                        "default": true,
                                        "description": "By default we assume that the models might be transpiled to JS, therefore JS restrictions will be applied by default."
                                    },
                                    "rawPropertyNames": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "Use raw property names instead of constrained ones, where you most likely need to access them with obj[\"propertyName\"] instead of obj.propertyName"
                                    }
                                },
                                "additionalProperties": false
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "default": "parameters-typescript"
                                    },
                                    "dependencies": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "default": []
                                    },
                                    "preset": {
                                        "type": "string",
                                        "const": "parameters",
                                        "default": "parameters"
                                    },
                                    "outputPath": {
                                        "type": "string",
                                        "default": "src/__gen__/parameters"
                                    },
                                    "serializationType": {
                                        "type": "string",
                                        "const": "json",
                                        "default": "json"
                                    },
                                    "language": {
                                        "type": "string",
                                        "const": "typescript",
                                        "default": "typescript"
                                    }
                                },
                                "additionalProperties": false
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "default": "channels-typescript"
                                    },
                                    "dependencies": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "default": [
                                            "parameters-typescript",
                                            "payloads-typescript"
                                        ]
                                    },
                                    "preset": {
                                        "type": "string",
                                        "const": "channels",
                                        "default": "channels"
                                    },
                                    "outputPath": {
                                        "type": "string",
                                        "default": "src/__gen__/channels"
                                    },
                                    "protocols": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "nats",
                                                "kafka",
                                                "mqtt",
                                                "amqp"
                                            ]
                                        },
                                        "default": [
                                            "nats",
                                            "kafka",
                                            "mqtt",
                                            "amqp"
                                        ]
                                    },
                                    "parameterGeneratorId": {
                                        "type": "string",
                                        "description": "In case you have multiple TypeScript parameter generators, you can specify which one to use as the dependency for this channels generator.",
                                        "default": "parameters-typescript"
                                    },
                                    "payloadGeneratorId": {
                                        "type": "string",
                                        "description": "In case you have multiple TypeScript payload generators, you can specify which one to use as the dependency for this channels generator.",
                                        "default": "payloads-typescript"
                                    },
                                    "asyncapiReverseOperations": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "Setting this to true generate operations with reversed meaning. So for AsyncAPI this means if an operation is defined as action: \"send\", it gets the opposite view of \"receive\"."
                                    },
                                    "asyncapiGenerateForOperations": {
                                        "type": "boolean",
                                        "default": true,
                                        "description": "Setting this to false means we dont enforce the operations defined in the AsyncAPI document and generate more generic channels."
                                    },
                                    "functionTypeMapping": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "anyOf": [
                                                {
                                                    "not": {}
                                                },
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "nats_jetstream_publish",
                                                            "nats_jetstream_pull_subscribe",
                                                            "nats_jetstream_push_subscribe",
                                                            "nats_subscribe",
                                                            "nats_publish",
                                                            "nats_request",
                                                            "nats_reply",
                                                            "mqtt_publish",
                                                            "kafka_publish",
                                                            "kafka_subscribe",
                                                            "amqp_queue_publish",
                                                            "amqp_exchange_publish"
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "default": {},
                                        "description": "Used in conjunction with AsyncAPI input, can define channel ID along side the type of functions that should be rendered."
                                    },
                                    "kafkaTopicSeparator": {
                                        "type": "string",
                                        "default": ".",
                                        "description": "Used with AsyncAPI to ensure the right character separate topics, example if address is my/resource/path it will be converted to my.resource.path"
                                    },
                                    "language": {
                                        "type": "string",
                                        "const": "typescript",
                                        "default": "typescript"
                                    }
                                },
                                "additionalProperties": false
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "default": "client-typescript"
                                    },
                                    "dependencies": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "default": [
                                            "channels-typescript"
                                        ]
                                    },
                                    "preset": {
                                        "type": "string",
                                        "const": "client",
                                        "default": "client"
                                    },
                                    "outputPath": {
                                        "type": "string",
                                        "default": "src/__gen__/clients"
                                    },
                                    "protocols": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "nats"
                                            ]
                                        },
                                        "default": [
                                            "nats"
                                        ]
                                    },
                                    "language": {
                                        "type": "string",
                                        "const": "typescript",
                                        "default": "typescript"
                                    },
                                    "channelsGeneratorId": {
                                        "type": "string",
                                        "description": "In case you have multiple TypeScript channels generators, you can specify which one to use as the dependency for this channels generator.",
                                        "default": "channels-typescript"
                                    }
                                },
                                "additionalProperties": false
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "default": "headers-typescript"
                                    },
                                    "dependencies": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "default": []
                                    },
                                    "preset": {
                                        "type": "string",
                                        "const": "headers",
                                        "default": "headers"
                                    },
                                    "outputPath": {
                                        "type": "string",
                                        "default": "src/__gen__/headers"
                                    },
                                    "serializationType": {
                                        "type": "string",
                                        "const": "json",
                                        "default": "json"
                                    },
                                    "language": {
                                        "type": "string",
                                        "const": "typescript",
                                        "default": "typescript"
                                    }
                                },
                                "additionalProperties": false
                            }
                        ]
                    }
                }
            },
            "required": [
                "inputType",
                "inputPath",
                "generators"
            ],
            "additionalProperties": false
        }
    },
    "$schema": "http://json-schema.org/draft-07/schema#"
}