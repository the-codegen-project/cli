{
    "asyncapi": "2.0.0",
    "info": {
        "title": "Blackbox API",
        "version": "0.1.0",
        "description": "This service is in charge of handling the code gen flow"
    },
    "defaultContentType": "application/json",
    "servers": {
        "local": {
            "url": "localhost:4672",
            "protocol": "nats",
            "description": "Local test broker"
        }
    },
    "channels": {
        "runs.command.start.{type}.{run_uid}": {
            "description": "This starts a run",
            "parameters": {
                "run_uid": {
                    "schema": {
                        "type": "string"
                    }
                },
                "type": {
                    "schema": {
                        "type": "string",
                        "enum": [
                            "openapi",
                            "asyncapi"
                        ]
                    }
                }
            },
            "subscribe": {
                "summary": "Start a run",
                "operationId": "startRun",
                "message": {
                    "$ref": "#/components/messages/startRun"
                }
            },
            "bindings": {
                "nats": {
                    "x-jetstream": {
                        "name": "StartRun"
                    }
                }
            }
        },
        "runs.command.forceGeneration": {
            "description": "This force a generation with very basic information as the rest is fetched",
            "publish": {
                "summary": "Force a generation with specific information",
                "operationId": "forceGeneration",
                "message": {
                    "$ref": "#/components/messages/forceGeneration"
                }
            },
            "bindings": {
                "nats": {
                    "x-jetstream": {
                        "name": "ForceGeneration"
                    }
                }
            }
        },
        "runs.checked.{check_id}": {
            "description": "Checked a for changes and potentially created some runs",
            "parameters": {
                "check_id": {
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "checkedForChanges",
                "message": {
                    "$ref": "#/components/messages/checkedForChanges"
                }
            },
            "bindings": {
                "nats": {
                    "x-jetstream": {
                        "name": "CheckedForChange"
                    }
                }
            }
        },
        "runs.command.check.project.{project_id}": {
            "description": "This check a project to see if anything needs to be generated",
            "parameters": {
                "project_id": {
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "publish": {
                "operationId": "checkProject",
                "message": {
                    "$ref": "#/components/messages/checkProject"
                }
            },
            "bindings": {
                "nats": {
                    "x-jetstream": {
                        "name": "CheckProject",
                        "subjects": [
                            "runs.command.check.project.>"
                        ]
                    }
                }
            }
        },
        "runs.command.check.project.{project_id}.document_instance.{document_instance_id}": {
            "description": "This check a document instance to see if any of the generators needs to have something generated",
            "parameters": {
                "project_id": {
                    "schema": {
                        "type": "string"
                    }
                },
                "document_instance_id": {
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "publish": {
                "operationId": "checkDocumentInstance",
                "message": {
                    "$ref": "#/components/messages/checkDocumentInstance"
                }
            },
            "bindings": {
                "$ref": "#/channels/runs.command.check.project.%7Bproject_id%7D/bindings"
            }
        },
        "runs.command.check.project.{project_id}.document_instance.{document_instance_id}.generator.{generator_id}": {
            "description": "This check a generator whether we need to update anything",
            "parameters": {
                "project_id": {
                    "schema": {
                        "type": "string"
                    }
                },
                "document_instance_id": {
                    "schema": {
                        "type": "string"
                    }
                },
                "generator_id": {
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "publish": {
                "operationId": "checkGenerator",
                "message": {
                    "$ref": "#/components/messages/checkGenerator"
                }
            },
            "bindings": {
                "$ref": "#/channels/runs.command.check.project.%7Bproject_id%7D/bindings"
            }
        },
        "runs.status.{run_uid}.log": {
            "description": "Used to log different kind of information for a run",
            "parameters": {
                "run_uid": {
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "logRun",
                "message": {
                    "$ref": "#/components/messages/logRun"
                }
            },
            "bindings": {
                "nats": {
                    "x-jetstream": {
                        "name": "LogRun"
                    }
                }
            }
        },
        "runs.status.{run_uid}.done": {
            "description": "Used when the run is completed successfully",
            "parameters": {
                "run_uid": {
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "runDone",
                "message": {
                    "$ref": "#/components/messages/runDone"
                }
            },
            "bindings": {
                "nats": {
                    "x-jetstream": {
                        "name": "RunDone"
                    }
                }
            }
        },
        "runs.status.{run_uid}.stopped": {
            "description": "Used when the run stopped unexpected",
            "parameters": {
                "run_uid": {
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "subscribe": {
                "operationId": "runStopped",
                "message": {
                    "$ref": "#/components/messages/runStopped"
                }
            },
            "bindings": {
                "nats": {
                    "x-jetstream": {
                        "name": "RunStopped"
                    }
                }
            }
        }
    },
    "components": {
        "messages": {
            "startRun": {
                "name": "startRun",
                "messageId": "startRun",
                "title": "Start run",
                "schemaFormat": "application/schema+json;version=draft-07",
                "payload": {
                    "$ref": "#/components/schemas/startRun"
                }
            },
            "forceGeneration": {
                "name": "forceGeneration",
                "title": "Force start a run",
                "schemaFormat": "application/schema+json;version=draft-07",
                "payload": {
                    "$ref": "#/components/schemas/forceGeneration"
                }
            },
            "checkedForChanges": {
                "name": "checkedForChanges",
                "schemaFormat": "application/schema+json;version=draft-07",
                "payload": {
                    "$ref": "#/components/schemas/checkedForChanges"
                }
            },
            "checkProject": {
                "name": "checkProject",
                "schemaFormat": "application/schema+json;version=draft-07",
                "payload": {
                    "$ref": "#/components/schemas/runCheck"
                }
            },
            "checkDocumentInstance": {
                "name": "checkDocumentInstance",
                "schemaFormat": "application/schema+json;version=draft-07",
                "payload": {
                    "$ref": "#/components/schemas/runCheck"
                }
            },
            "checkGenerator": {
                "name": "checkGenerator",
                "schemaFormat": "application/schema+json;version=draft-07",
                "payload": {
                    "$ref": "#/components/schemas/runCheck"
                }
            },
            "logRun": {
                "name": "logRun",
                "title": "Log something for the run",
                "payload": {
                    "$ref": "#/components/schemas/logRun"
                }
            },
            "runStopped": {
                "name": "runStopped",
                "title": "Run has been stopped run",
                "payload": {
                    "$ref": "#/components/schemas/runStopped"
                }
            },
            "runDone": {
                "name": "runDone",
                "title": "Run is done",
                "payload": {
                    "$ref": "#/components/schemas/runDone"
                }
            }
        },
        "schemas": {
            "runDone": {
                "type": "object",
                "required": [],
                "properties": {
                    "datetime": {
                        "type": "string"
                    }
                }
            },
            "runStopped": {
                "type": "object",
                "required": [],
                "properties": {
                    "datetime": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "checkedForChanges": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "run_ids": {
                        "description": "List of run_id's that is the result of this check. None = nothing to do.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "additionalProperties": false
            },
            "runCheck": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "check_id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "forceGeneration": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "run_id": {
                        "type": "string"
                    },
                    "generator_id": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string",
                        "description": "version to use for the library instead of checking for changes"
                    }
                }
            },
            "startRun": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "types": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "$id": "GeneratorTypes",
                        "type": "string",
                        "enum": [
                            "openapi",
                            "asyncapi"
                        ]
                    },
                    "openapi": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "$id": "OpenAPIGenerator",
                        "type": "object",
                        "required": [],
                        "properties": {
                            "language": {
                                "$ref": "#/components/schemas/startRun/properties/openapi/definitions/OpenAPIGenerators"
                            },
                            "version": {
                                "type": "string"
                            },
                            "documentContext": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "DocumentContext",
                                "type": "object",
                                "properties": {
                                    "specificationDocument": {
                                        "description": "The full spec file loaded into memory - Stringified",
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "language": {
                                            "$ref": "#/channels/runs.command.start.%7Btype%7D.%7Brun_uid%7D/subscribe/message/payload/properties/openapi/allOf/0/then/properties/typeScriptFetchSettings/x-language"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "typeScriptFetchSettings": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "$id": "openapi_typescript_fetch",
                                            "type": "object",
                                            "properties": {
                                                "generatorVersion": {
                                                    "description": "The precise version of the generator to be used",
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "The description of the released library, can contain markdown",
                                                    "type": "string"
                                                },
                                                "title": {
                                                    "description": "A representable title to use for the library. Difference with libraryName as this is not for machines.",
                                                    "type": "string"
                                                },
                                                "npmReleaseConfig": {
                                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                                    "$id": "npm-release",
                                                    "type": "object",
                                                    "description": "These configurations are required for publishing to NPM.",
                                                    "properties": {
                                                        "npmRepository": {
                                                            "description": "The repository to release the library to",
                                                            "type": "string",
                                                            "default": "https://registry.npmjs.org"
                                                        },
                                                        "npmToken": {
                                                            "description": "The token to use to release the library",
                                                            "type": "string"
                                                        },
                                                        "npmName": {
                                                            "description": "The npm name of the library to release in the form '@user/repo-name'",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "npmRepository",
                                                        "npmToken",
                                                        "npmName"
                                                    ]
                                                }
                                            },
                                            "x-language": {
                                                "const": "typescript-fetch"
                                            },
                                            "required": [
                                                "generatorVersion"
                                            ]
                                        }
                                    }
                                }
                            }
                        ],
                        "definitions": {
                            "OpenAPIGenerators": {
                                "$id": "OpenAPIGenerators",
                                "type": "string",
                                "oneOf": [
                                    {
                                        "$ref": "#/channels/runs.command.start.%7Btype%7D.%7Brun_uid%7D/subscribe/message/payload/properties/openapi/allOf/0/then/properties/typeScriptFetchSettings/x-language"
                                    }
                                ]
                            }
                        }
                    },
                    "asyncapi": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "$id": "AsyncAPIGenerator",
                        "type": "object",
                        "required": [],
                        "properties": {
                            "language": {
                                "$ref": "#/components/schemas/startRun/properties/asyncapi/definitions/AsyncAPIGenerators"
                            },
                            "version": {
                                "type": "string"
                            },
                            "documentContext": {
                                "$ref": "#/channels/runs.command.start.%7Btype%7D.%7Brun_uid%7D/subscribe/message/payload/properties/openapi/properties/documentContext"
                            }
                        },
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "language": {
                                            "$ref": "#/channels/runs.command.start.%7Btype%7D.%7Brun_uid%7D/subscribe/message/payload/properties/asyncapi/allOf/0/then/properties/typeScriptNatsSettings/x-language"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "typeScriptNatsSettings": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "$id": "typescript-nats-settings",
                                            "type": "object",
                                            "properties": {
                                                "generatorVersion": {
                                                    "description": "The precise version of the generator to be used",
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "The description of the released library, can contain markdown",
                                                    "type": "string"
                                                },
                                                "title": {
                                                    "description": "A representable title to use for the library. Difference with libraryName is this is not for machines.",
                                                    "type": "string"
                                                },
                                                "npmReleaseConfig": {
                                                    "$ref": "#/channels/runs.command.start.%7Btype%7D.%7Brun_uid%7D/subscribe/message/payload/properties/openapi/allOf/0/then/properties/typeScriptFetchSettings/properties/npmReleaseConfig"
                                                }
                                            },
                                            "x-language": {
                                                "const": "typescript-nats"
                                            }
                                        }
                                    }
                                }
                            }
                        ],
                        "definitions": {
                            "AsyncAPIGenerators": {
                                "$id": "AsyncAPIGenerators",
                                "type": "string",
                                "oneOf": [
                                    {
                                        "$ref": "#/channels/runs.command.start.%7Btype%7D.%7Brun_uid%7D/subscribe/message/payload/properties/asyncapi/allOf/0/then/properties/typeScriptNatsSettings/x-language"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "logRun": {
                "type": "object",
                "required": [],
                "properties": {
                    "datetime": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    }
}