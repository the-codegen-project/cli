// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`headers typescript should work with basic AsyncAPI inputs 1`] = `
"
class SimpleObjectHeaders {
  private _displayName?: string;
  private _email?: string;

  constructor(input: {
    displayName?: string,
    email?: string,
  }) {
    this._displayName = input.displayName;
    this._email = input.email;
  }

  /**
   * Name of the user
   */
  get displayName(): string | undefined { return this._displayName; }
  set displayName(displayName: string | undefined) { this._displayName = displayName; }

  /**
   * Email of the user
   */
  get email(): string | undefined { return this._email; }
  set email(email: string | undefined) { this._email = email; }

  public marshal() : string {
    let json = '{'
    if(this.displayName !== undefined) {
      json += \`"displayName": \${typeof this.displayName === 'number' || typeof this.displayName === 'boolean' ? this.displayName : JSON.stringify(this.displayName)},\`;
    }
    if(this.email !== undefined) {
      json += \`"email": \${typeof this.email === 'number' || typeof this.email === 'boolean' ? this.email : JSON.stringify(this.email)},\`;
    }
  
    //Remove potential last comma 
    return \`\${json.charAt(json.length-1) === ',' ? json.slice(0, json.length-1) : json}}\`;
  }

  public static unmarshal(json: string | object): SimpleObjectHeaders {
    const obj = typeof json === "object" ? json : JSON.parse(json);
    const instance = new SimpleObjectHeaders({} as any);

    if (obj["displayName"] !== undefined) {
      instance.displayName = obj["displayName"];
    }
    if (obj["email"] !== undefined) {
      instance.email = obj["email"];
    }
  
  
    return instance;
  }
}
export { SimpleObjectHeaders };"
`;
